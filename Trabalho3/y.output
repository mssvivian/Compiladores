Terminals unused in grammar

    WHILE
    AND
    OR
    ME_IG
    MA_IG
    DIF
    IGUAL


State 40 conflicts: 9 reduce/reduce
State 41 conflicts: 9 reduce/reduce
State 121 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs
    2  | ε

    3 CMDs: CMDs CMD
    4     | CMD

    5 CMD: CMD_LET ';'
    6    | CMD_VAR ';'
    7    | CMD_CONST ';'
    8    | CMD_IF
    9    | PRINT E ';'
   10    | CMD_FOR
   11    | E ';'
   12    | '{' CMDs '}'

   13 CMD_FOR: FOR '(' SF ';' E ';' EF ')' CMD

   14 EF: E
   15   | ε

   16 SF: CMD_LET
   17   | CMD_VAR
   18   | CMD_CONST
   19   | EF

   20 CMD_LET: LET LET_VARs

   21 LET_VARs: LET_VAR ',' LET_VARs
   22         | LET_VAR

   23 LET_VAR: LVALUE
   24        | LVALUE '=' E
   25        | LVALUE '=' '{' '}'

   26 CMD_VAR: VAR VAR_VARs

   27 VAR_VARs: VAR_VAR ',' VAR_VARs
   28         | VAR_VAR

   29 VAR_VAR: LVALUE
   30        | LVALUE '=' E
   31        | LVALUE '=' '{' '}'

   32 CMD_CONST: CONST CONST_VARs

   33 CONST_VARs: CONST_VAR ',' CONST_VARs
   34           | CONST_VAR

   35 CONST_VAR: LVALUE
   36          | LVALUE '=' E
   37          | LVALUE '=' '{' '}'

   38 CMD_IF: IF '(' E ')' CMD
   39       | IF '(' E ')' CMD ELSE CMD

   40 LVALUE: ID

   41 LVALUEPROP: E '[' E ']'
   42           | E '.' ID

   43 LIST: '[' LISTVALS ']'
   44     | '[' ']'

   45 LISTVALS: LISTVAL ',' LISTVALS
   46         | LISTVAL

   47 LISTVAL: E

   48 E: LVALUE '=' '{' '}'
   49  | LVALUEPROP '=' '{' '}'
   50  | LVALUE '=' E
   51  | LVALUEPROP '=' E
   52  | LVALUE MAIS_IGUAL E
   53  | LVALUEPROP MAIS_IGUAL E
   54  | E '<' E
   55  | E '>' E
   56  | E '+' E
   57  | E '-' E
   58  | E '*' E
   59  | E '/' E
   60  | E '%' E
   61  | F

   62 F: CDOUBLE
   63  | CINT
   64  | CSTRING
   65  | LVALUE
   66  | LVALUEPROP
   67  | '(' E ')'
   68  | LIST
   69  | '(' '{' '}' ')'
   70  | LVALUE MAIS_MAIS
   71  | LVALUEPROP MAIS_MAIS
   72  | MAIS_MAIS LVALUE
   73  | MAIS_MAIS LVALUEPROP


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 60
    '(' (40) 13 38 39 67 69
    ')' (41) 13 38 39 67 69
    '*' (42) 58
    '+' (43) 56
    ',' (44) 21 27 33 45
    '-' (45) 57
    '.' (46) 42
    '/' (47) 59
    ';' (59) 5 6 7 9 11 13
    '<' (60) 54
    '=' (61) 24 25 30 31 36 37 48 49 50 51
    '>' (62) 55
    '[' (91) 41 43 44
    ']' (93) 41 43 44
    '{' (123) 12 25 31 37 48 49 69
    '}' (125) 12 25 31 37 48 49 69
    error (256)
    ID (258) 40 42
    IF (259) 38 39
    ELSE (260) 39
    LET (261) 20
    CONST (262) 32
    VAR (263) 26
    PRINT (264) 9
    FOR (265) 13
    WHILE (266)
    CDOUBLE (267) 62
    CSTRING (268) 64
    CINT (269) 63
    AND (270)
    OR (271)
    ME_IG (272)
    MA_IG (273)
    DIF (274)
    IGUAL (275)
    MAIS_IGUAL (276) 52 53
    MAIS_MAIS (277) 70 71 72 73


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    S (41)
        on left: 1 2
        on right: 0
    CMDs (42)
        on left: 3 4
        on right: 1 3 12
    CMD (43)
        on left: 5 6 7 8 9 10 11 12
        on right: 3 4 13 38 39
    CMD_FOR (44)
        on left: 13
        on right: 10
    EF (45)
        on left: 14 15
        on right: 13 19
    SF (46)
        on left: 16 17 18 19
        on right: 13
    CMD_LET (47)
        on left: 20
        on right: 5 16
    LET_VARs (48)
        on left: 21 22
        on right: 20 21
    LET_VAR (49)
        on left: 23 24 25
        on right: 21 22
    CMD_VAR (50)
        on left: 26
        on right: 6 17
    VAR_VARs (51)
        on left: 27 28
        on right: 26 27
    VAR_VAR (52)
        on left: 29 30 31
        on right: 27 28
    CMD_CONST (53)
        on left: 32
        on right: 7 18
    CONST_VARs (54)
        on left: 33 34
        on right: 32 33
    CONST_VAR (55)
        on left: 35 36 37
        on right: 33 34
    CMD_IF (56)
        on left: 38 39
        on right: 8
    LVALUE (57)
        on left: 40
        on right: 23 24 25 29 30 31 35 36 37 48 50 52 65 70 72
    LVALUEPROP (58)
        on left: 41 42
        on right: 49 51 53 66 71 73
    LIST (59)
        on left: 43 44
        on right: 68
    LISTVALS (60)
        on left: 45 46
        on right: 43 45
    LISTVAL (61)
        on left: 47
        on right: 45 46
    E (62)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 9 11 13 14 24 30 36 38 39 41 42 47 50 51 52 53 54 55 56 57 58 59 60 67
    F (63)
        on left: 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 61


State 0

    0 $accept: • S $end

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    LET        shift, and go to state 3
    CONST      shift, and go to state 4
    VAR        shift, and go to state 5
    PRINT      shift, and go to state 6
    FOR        shift, and go to state 7
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14

    $default  reduce using rule 2 (S)

    S           go to state 15
    CMDs        go to state 16
    CMD         go to state 17
    CMD_FOR     go to state 18
    CMD_LET     go to state 19
    CMD_VAR     go to state 20
    CMD_CONST   go to state 21
    CMD_IF      go to state 22
    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 26
    F           go to state 27


State 1

   40 LVALUE: ID •

    $default  reduce using rule 40 (LVALUE)


State 2

   38 CMD_IF: IF • '(' E ')' CMD
   39       | IF • '(' E ')' CMD ELSE CMD

    '('  shift, and go to state 28


State 3

   20 CMD_LET: LET • LET_VARs

    ID  shift, and go to state 1

    LET_VARs  go to state 29
    LET_VAR   go to state 30
    LVALUE    go to state 31


State 4

   32 CMD_CONST: CONST • CONST_VARs

    ID  shift, and go to state 1

    CONST_VARs  go to state 32
    CONST_VAR   go to state 33
    LVALUE      go to state 34


State 5

   26 CMD_VAR: VAR • VAR_VARs

    ID  shift, and go to state 1

    VAR_VARs  go to state 35
    VAR_VAR   go to state 36
    LVALUE    go to state 37


State 6

    9 CMD: PRINT • E ';'

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 38
    F           go to state 27


State 7

   13 CMD_FOR: FOR • '(' SF ';' E ';' EF ')' CMD

    '('  shift, and go to state 39


State 8

   62 F: CDOUBLE •

    $default  reduce using rule 62 (F)


State 9

   64 F: CSTRING •

    $default  reduce using rule 64 (F)


State 10

   63 F: CINT •

    $default  reduce using rule 63 (F)


State 11

   72 F: MAIS_MAIS • LVALUE
   73  | MAIS_MAIS • LVALUEPROP

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 40
    LVALUEPROP  go to state 41
    LIST        go to state 25
    E           go to state 42
    F           go to state 27


State 12

   43 LIST: '[' • LISTVALS ']'
   44     | '[' • ']'

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ']'        shift, and go to state 43

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    LISTVALS    go to state 44
    LISTVAL     go to state 45
    E           go to state 46
    F           go to state 27


State 13

   67 F: '(' • E ')'
   69  | '(' • '{' '}' ')'

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 48
    F           go to state 27


State 14

   12 CMD: '{' • CMDs '}'

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    LET        shift, and go to state 3
    CONST      shift, and go to state 4
    VAR        shift, and go to state 5
    PRINT      shift, and go to state 6
    FOR        shift, and go to state 7
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14

    CMDs        go to state 49
    CMD         go to state 17
    CMD_FOR     go to state 18
    CMD_LET     go to state 19
    CMD_VAR     go to state 20
    CMD_CONST   go to state 21
    CMD_IF      go to state 22
    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 26
    F           go to state 27


State 15

    0 $accept: S • $end

    $end  shift, and go to state 50


State 16

    1 S: CMDs •
    3 CMDs: CMDs • CMD

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    LET        shift, and go to state 3
    CONST      shift, and go to state 4
    VAR        shift, and go to state 5
    PRINT      shift, and go to state 6
    FOR        shift, and go to state 7
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14

    $default  reduce using rule 1 (S)

    CMD         go to state 51
    CMD_FOR     go to state 18
    CMD_LET     go to state 19
    CMD_VAR     go to state 20
    CMD_CONST   go to state 21
    CMD_IF      go to state 22
    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 26
    F           go to state 27


State 17

    4 CMDs: CMD •

    $default  reduce using rule 4 (CMDs)


State 18

   10 CMD: CMD_FOR •

    $default  reduce using rule 10 (CMD)


State 19

    5 CMD: CMD_LET • ';'

    ';'  shift, and go to state 52


State 20

    6 CMD: CMD_VAR • ';'

    ';'  shift, and go to state 53


State 21

    7 CMD: CMD_CONST • ';'

    ';'  shift, and go to state 54


State 22

    8 CMD: CMD_IF •

    $default  reduce using rule 8 (CMD)


State 23

   48 E: LVALUE • '=' '{' '}'
   50  | LVALUE • '=' E
   52  | LVALUE • MAIS_IGUAL E
   65 F: LVALUE •
   70  | LVALUE • MAIS_MAIS

    MAIS_IGUAL  shift, and go to state 55
    MAIS_MAIS   shift, and go to state 56
    '='         shift, and go to state 57

    $default  reduce using rule 65 (F)


State 24

   49 E: LVALUEPROP • '=' '{' '}'
   51  | LVALUEPROP • '=' E
   53  | LVALUEPROP • MAIS_IGUAL E
   66 F: LVALUEPROP •
   71  | LVALUEPROP • MAIS_MAIS

    MAIS_IGUAL  shift, and go to state 58
    MAIS_MAIS   shift, and go to state 59
    '='         shift, and go to state 60

    $default  reduce using rule 66 (F)


State 25

   68 F: LIST •

    $default  reduce using rule 68 (F)


State 26

   11 CMD: E • ';'
   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69
    ';'  shift, and go to state 70


State 27

   61 E: F •

    $default  reduce using rule 61 (E)


State 28

   38 CMD_IF: IF '(' • E ')' CMD
   39       | IF '(' • E ')' CMD ELSE CMD

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 71
    F           go to state 27


State 29

   20 CMD_LET: LET LET_VARs •

    $default  reduce using rule 20 (CMD_LET)


State 30

   21 LET_VARs: LET_VAR • ',' LET_VARs
   22         | LET_VAR •

    ','  shift, and go to state 72

    $default  reduce using rule 22 (LET_VARs)


State 31

   23 LET_VAR: LVALUE •
   24        | LVALUE • '=' E
   25        | LVALUE • '=' '{' '}'

    '='  shift, and go to state 73

    $default  reduce using rule 23 (LET_VAR)


State 32

   32 CMD_CONST: CONST CONST_VARs •

    $default  reduce using rule 32 (CMD_CONST)


State 33

   33 CONST_VARs: CONST_VAR • ',' CONST_VARs
   34           | CONST_VAR •

    ','  shift, and go to state 74

    $default  reduce using rule 34 (CONST_VARs)


State 34

   35 CONST_VAR: LVALUE •
   36          | LVALUE • '=' E
   37          | LVALUE • '=' '{' '}'

    '='  shift, and go to state 75

    $default  reduce using rule 35 (CONST_VAR)


State 35

   26 CMD_VAR: VAR VAR_VARs •

    $default  reduce using rule 26 (CMD_VAR)


State 36

   27 VAR_VARs: VAR_VAR • ',' VAR_VARs
   28         | VAR_VAR •

    ','  shift, and go to state 76

    $default  reduce using rule 28 (VAR_VARs)


State 37

   29 VAR_VAR: LVALUE •
   30        | LVALUE • '=' E
   31        | LVALUE • '=' '{' '}'

    '='  shift, and go to state 77

    $default  reduce using rule 29 (VAR_VAR)


State 38

    9 CMD: PRINT E • ';'
   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69
    ';'  shift, and go to state 78


State 39

   13 CMD_FOR: FOR '(' • SF ';' E ';' EF ')' CMD

    ID         shift, and go to state 1
    LET        shift, and go to state 3
    CONST      shift, and go to state 4
    VAR        shift, and go to state 5
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    $default  reduce using rule 15 (EF)

    EF          go to state 79
    SF          go to state 80
    CMD_LET     go to state 81
    CMD_VAR     go to state 82
    CMD_CONST   go to state 83
    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 84
    F           go to state 27


State 40

   48 E: LVALUE • '=' '{' '}'
   50  | LVALUE • '=' E
   52  | LVALUE • MAIS_IGUAL E
   65 F: LVALUE •
   70  | LVALUE • MAIS_MAIS
   72  | MAIS_MAIS LVALUE •

    MAIS_IGUAL  shift, and go to state 55
    MAIS_MAIS   shift, and go to state 56
    '='         shift, and go to state 57

    '<'       reduce using rule 65 (F)
    '<'       [reduce using rule 72 (F)]
    '>'       reduce using rule 65 (F)
    '>'       [reduce using rule 72 (F)]
    '+'       reduce using rule 65 (F)
    '+'       [reduce using rule 72 (F)]
    '-'       reduce using rule 65 (F)
    '-'       [reduce using rule 72 (F)]
    '*'       reduce using rule 65 (F)
    '*'       [reduce using rule 72 (F)]
    '/'       reduce using rule 65 (F)
    '/'       [reduce using rule 72 (F)]
    '%'       reduce using rule 65 (F)
    '%'       [reduce using rule 72 (F)]
    '['       reduce using rule 65 (F)
    '['       [reduce using rule 72 (F)]
    '.'       reduce using rule 65 (F)
    '.'       [reduce using rule 72 (F)]
    ';'       reduce using rule 72 (F)
    ')'       reduce using rule 72 (F)
    ','       reduce using rule 72 (F)
    ']'       reduce using rule 72 (F)
    $default  reduce using rule 65 (F)

    reduce/reduce conflict on tokens '<', '>', '+', '-', '*', '/', '%', '[', '.':
       65 F: LVALUE •
       72 F: MAIS_MAIS LVALUE •
      Example: MAIS_MAIS LVALUE • '.' ID
      First reduce derivation
        F
        ↳ 73: MAIS_MAIS LVALUEPROP
                        ↳ 42: E                    '.' ID
                              ↳ 61: F
                                    ↳ 65: LVALUE •
      Second reduce derivation
        F
        ↳ 66: LVALUEPROP
              ↳ 42: E                              '.' ID
                    ↳ 61: F
                          ↳ 72: MAIS_MAIS LVALUE •



State 41

   49 E: LVALUEPROP • '=' '{' '}'
   51  | LVALUEPROP • '=' E
   53  | LVALUEPROP • MAIS_IGUAL E
   66 F: LVALUEPROP •
   71  | LVALUEPROP • MAIS_MAIS
   73  | MAIS_MAIS LVALUEPROP •

    MAIS_IGUAL  shift, and go to state 58
    MAIS_MAIS   shift, and go to state 59
    '='         shift, and go to state 60

    '<'       reduce using rule 66 (F)
    '<'       [reduce using rule 73 (F)]
    '>'       reduce using rule 66 (F)
    '>'       [reduce using rule 73 (F)]
    '+'       reduce using rule 66 (F)
    '+'       [reduce using rule 73 (F)]
    '-'       reduce using rule 66 (F)
    '-'       [reduce using rule 73 (F)]
    '*'       reduce using rule 66 (F)
    '*'       [reduce using rule 73 (F)]
    '/'       reduce using rule 66 (F)
    '/'       [reduce using rule 73 (F)]
    '%'       reduce using rule 66 (F)
    '%'       [reduce using rule 73 (F)]
    '['       reduce using rule 66 (F)
    '['       [reduce using rule 73 (F)]
    '.'       reduce using rule 66 (F)
    '.'       [reduce using rule 73 (F)]
    ';'       reduce using rule 73 (F)
    ')'       reduce using rule 73 (F)
    ','       reduce using rule 73 (F)
    ']'       reduce using rule 73 (F)
    $default  reduce using rule 66 (F)

    reduce/reduce conflict on tokens '<', '>', '+', '-', '*', '/', '%', '[', '.':
       66 F: LVALUEPROP •
       73 F: MAIS_MAIS LVALUEPROP •
      Example: MAIS_MAIS LVALUEPROP • '.' ID
      First reduce derivation
        F
        ↳ 73: MAIS_MAIS LVALUEPROP
                        ↳ 42: E                        '.' ID
                              ↳ 61: F
                                    ↳ 66: LVALUEPROP •
      Second reduce derivation
        F
        ↳ 66: LVALUEPROP
              ↳ 42: E                                  '.' ID
                    ↳ 61: F
                          ↳ 73: MAIS_MAIS LVALUEPROP •



State 42

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69


State 43

   44 LIST: '[' ']' •

    $default  reduce using rule 44 (LIST)


State 44

   43 LIST: '[' LISTVALS • ']'

    ']'  shift, and go to state 85


State 45

   45 LISTVALS: LISTVAL • ',' LISTVALS
   46         | LISTVAL •

    ','  shift, and go to state 86

    $default  reduce using rule 46 (LISTVALS)


State 46

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   47 LISTVAL: E •
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 47 (LISTVAL)


State 47

   69 F: '(' '{' • '}' ')'

    '}'  shift, and go to state 87


State 48

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E
   67 F: '(' E • ')'

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69
    ')'  shift, and go to state 88


State 49

    3 CMDs: CMDs • CMD
   12 CMD: '{' CMDs • '}'

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    LET        shift, and go to state 3
    CONST      shift, and go to state 4
    VAR        shift, and go to state 5
    PRINT      shift, and go to state 6
    FOR        shift, and go to state 7
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14
    '}'        shift, and go to state 89

    CMD         go to state 51
    CMD_FOR     go to state 18
    CMD_LET     go to state 19
    CMD_VAR     go to state 20
    CMD_CONST   go to state 21
    CMD_IF      go to state 22
    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 26
    F           go to state 27


State 50

    0 $accept: S $end •

    $default  accept


State 51

    3 CMDs: CMDs CMD •

    $default  reduce using rule 3 (CMDs)


State 52

    5 CMD: CMD_LET ';' •

    $default  reduce using rule 5 (CMD)


State 53

    6 CMD: CMD_VAR ';' •

    $default  reduce using rule 6 (CMD)


State 54

    7 CMD: CMD_CONST ';' •

    $default  reduce using rule 7 (CMD)


State 55

   52 E: LVALUE MAIS_IGUAL • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 90
    F           go to state 27


State 56

   70 F: LVALUE MAIS_MAIS •

    $default  reduce using rule 70 (F)


State 57

   48 E: LVALUE '=' • '{' '}'
   50  | LVALUE '=' • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 91

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 92
    F           go to state 27


State 58

   53 E: LVALUEPROP MAIS_IGUAL • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 93
    F           go to state 27


State 59

   71 F: LVALUEPROP MAIS_MAIS •

    $default  reduce using rule 71 (F)


State 60

   49 E: LVALUEPROP '=' • '{' '}'
   51  | LVALUEPROP '=' • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 94

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 95
    F           go to state 27


State 61

   54 E: E '<' • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 96
    F           go to state 27


State 62

   55 E: E '>' • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 97
    F           go to state 27


State 63

   56 E: E '+' • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 98
    F           go to state 27


State 64

   57 E: E '-' • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 99
    F           go to state 27


State 65

   58 E: E '*' • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 100
    F           go to state 27


State 66

   59 E: E '/' • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 101
    F           go to state 27


State 67

   60 E: E '%' • E

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 102
    F           go to state 27


State 68

   41 LVALUEPROP: E '[' • E ']'

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 103
    F           go to state 27


State 69

   42 LVALUEPROP: E '.' • ID

    ID  shift, and go to state 104


State 70

   11 CMD: E ';' •

    $default  reduce using rule 11 (CMD)


State 71

   38 CMD_IF: IF '(' E • ')' CMD
   39       | IF '(' E • ')' CMD ELSE CMD
   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69
    ')'  shift, and go to state 105


State 72

   21 LET_VARs: LET_VAR ',' • LET_VARs

    ID  shift, and go to state 1

    LET_VARs  go to state 106
    LET_VAR   go to state 30
    LVALUE    go to state 31


State 73

   24 LET_VAR: LVALUE '=' • E
   25        | LVALUE '=' • '{' '}'

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 107

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 108
    F           go to state 27


State 74

   33 CONST_VARs: CONST_VAR ',' • CONST_VARs

    ID  shift, and go to state 1

    CONST_VARs  go to state 109
    CONST_VAR   go to state 33
    LVALUE      go to state 34


State 75

   36 CONST_VAR: LVALUE '=' • E
   37          | LVALUE '=' • '{' '}'

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 110

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 111
    F           go to state 27


State 76

   27 VAR_VARs: VAR_VAR ',' • VAR_VARs

    ID  shift, and go to state 1

    VAR_VARs  go to state 112
    VAR_VAR   go to state 36
    LVALUE    go to state 37


State 77

   30 VAR_VAR: LVALUE '=' • E
   31        | LVALUE '=' • '{' '}'

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 113

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 114
    F           go to state 27


State 78

    9 CMD: PRINT E ';' •

    $default  reduce using rule 9 (CMD)


State 79

   19 SF: EF •

    $default  reduce using rule 19 (SF)


State 80

   13 CMD_FOR: FOR '(' SF • ';' E ';' EF ')' CMD

    ';'  shift, and go to state 115


State 81

   16 SF: CMD_LET •

    $default  reduce using rule 16 (SF)


State 82

   17 SF: CMD_VAR •

    $default  reduce using rule 17 (SF)


State 83

   18 SF: CMD_CONST •

    $default  reduce using rule 18 (SF)


State 84

   14 EF: E •
   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 14 (EF)


State 85

   43 LIST: '[' LISTVALS ']' •

    $default  reduce using rule 43 (LIST)


State 86

   45 LISTVALS: LISTVAL ',' • LISTVALS

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    LISTVALS    go to state 116
    LISTVAL     go to state 45
    E           go to state 46
    F           go to state 27


State 87

   69 F: '(' '{' '}' • ')'

    ')'  shift, and go to state 117


State 88

   67 F: '(' E ')' •

    $default  reduce using rule 67 (F)


State 89

   12 CMD: '{' CMDs '}' •

    $default  reduce using rule 12 (CMD)


State 90

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   52 E: LVALUE MAIS_IGUAL E •
   54  | E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 52 (E)


State 91

   48 E: LVALUE '=' '{' • '}'

    '}'  shift, and go to state 118


State 92

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   50 E: LVALUE '=' E •
   54  | E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 50 (E)


State 93

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   53 E: LVALUEPROP MAIS_IGUAL E •
   54  | E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 53 (E)


State 94

   49 E: LVALUEPROP '=' '{' • '}'

    '}'  shift, and go to state 119


State 95

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   51 E: LVALUEPROP '=' E •
   54  | E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 51 (E)


State 96

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   54  | E '<' E •
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 54 (E)


State 97

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   55  | E '>' E •
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 55 (E)


State 98

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   56  | E '+' E •
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 56 (E)


State 99

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   57  | E '-' E •
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 57 (E)


State 100

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   58  | E '*' E •
   59  | E • '/' E
   60  | E • '%' E

    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 58 (E)


State 101

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   59  | E '/' E •
   60  | E • '%' E

    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 59 (E)


State 102

   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E
   60  | E '%' E •

    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 60 (E)


State 103

   41 LVALUEPROP: E • '[' E ']'
   41           | E '[' E • ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69
    ']'  shift, and go to state 120


State 104

   42 LVALUEPROP: E '.' ID •

    $default  reduce using rule 42 (LVALUEPROP)


State 105

   38 CMD_IF: IF '(' E ')' • CMD
   39       | IF '(' E ')' • CMD ELSE CMD

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    LET        shift, and go to state 3
    CONST      shift, and go to state 4
    VAR        shift, and go to state 5
    PRINT      shift, and go to state 6
    FOR        shift, and go to state 7
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14

    CMD         go to state 121
    CMD_FOR     go to state 18
    CMD_LET     go to state 19
    CMD_VAR     go to state 20
    CMD_CONST   go to state 21
    CMD_IF      go to state 22
    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 26
    F           go to state 27


State 106

   21 LET_VARs: LET_VAR ',' LET_VARs •

    $default  reduce using rule 21 (LET_VARs)


State 107

   25 LET_VAR: LVALUE '=' '{' • '}'

    '}'  shift, and go to state 122


State 108

   24 LET_VAR: LVALUE '=' E •
   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 24 (LET_VAR)


State 109

   33 CONST_VARs: CONST_VAR ',' CONST_VARs •

    $default  reduce using rule 33 (CONST_VARs)


State 110

   37 CONST_VAR: LVALUE '=' '{' • '}'

    '}'  shift, and go to state 123


State 111

   36 CONST_VAR: LVALUE '=' E •
   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 36 (CONST_VAR)


State 112

   27 VAR_VARs: VAR_VAR ',' VAR_VARs •

    $default  reduce using rule 27 (VAR_VARs)


State 113

   31 VAR_VAR: LVALUE '=' '{' • '}'

    '}'  shift, and go to state 124


State 114

   30 VAR_VAR: LVALUE '=' E •
   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69

    $default  reduce using rule 30 (VAR_VAR)


State 115

   13 CMD_FOR: FOR '(' SF ';' • E ';' EF ')' CMD

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 125
    F           go to state 27


State 116

   45 LISTVALS: LISTVAL ',' LISTVALS •

    $default  reduce using rule 45 (LISTVALS)


State 117

   69 F: '(' '{' '}' ')' •

    $default  reduce using rule 69 (F)


State 118

   48 E: LVALUE '=' '{' '}' •

    $default  reduce using rule 48 (E)


State 119

   49 E: LVALUEPROP '=' '{' '}' •

    $default  reduce using rule 49 (E)


State 120

   41 LVALUEPROP: E '[' E ']' •

    $default  reduce using rule 41 (LVALUEPROP)


State 121

   38 CMD_IF: IF '(' E ')' CMD •
   39       | IF '(' E ')' CMD • ELSE CMD

    ELSE  shift, and go to state 126

    ELSE      [reduce using rule 38 (CMD_IF)]
    $default  reduce using rule 38 (CMD_IF)

    shift/reduce conflict on token ELSE:
       38 CMD_IF: IF '(' E ')' CMD •
       39 CMD_IF: IF '(' E ')' CMD • ELSE CMD
      Example: IF '(' E ')' IF '(' E ')' CMD • ELSE CMD
      Shift derivation
        CMD_IF
        ↳ 38: IF '(' E ')' CMD
                           ↳ 8: CMD_IF
                                ↳ 39: IF '(' E ')' CMD • ELSE CMD
      Reduce derivation
        CMD_IF
        ↳ 39: IF '(' E ')' CMD                           ELSE CMD
                           ↳ 8: CMD_IF
                                ↳ 38: IF '(' E ')' CMD •



State 122

   25 LET_VAR: LVALUE '=' '{' '}' •

    $default  reduce using rule 25 (LET_VAR)


State 123

   37 CONST_VAR: LVALUE '=' '{' '}' •

    $default  reduce using rule 37 (CONST_VAR)


State 124

   31 VAR_VAR: LVALUE '=' '{' '}' •

    $default  reduce using rule 31 (VAR_VAR)


State 125

   13 CMD_FOR: FOR '(' SF ';' E • ';' EF ')' CMD
   41 LVALUEPROP: E • '[' E ']'
   42           | E • '.' ID
   54 E: E • '<' E
   55  | E • '>' E
   56  | E • '+' E
   57  | E • '-' E
   58  | E • '*' E
   59  | E • '/' E
   60  | E • '%' E

    '<'  shift, and go to state 61
    '>'  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '['  shift, and go to state 68
    '.'  shift, and go to state 69
    ';'  shift, and go to state 127


State 126

   39 CMD_IF: IF '(' E ')' CMD ELSE • CMD

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    LET        shift, and go to state 3
    CONST      shift, and go to state 4
    VAR        shift, and go to state 5
    PRINT      shift, and go to state 6
    FOR        shift, and go to state 7
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14

    CMD         go to state 128
    CMD_FOR     go to state 18
    CMD_LET     go to state 19
    CMD_VAR     go to state 20
    CMD_CONST   go to state 21
    CMD_IF      go to state 22
    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 26
    F           go to state 27


State 127

   13 CMD_FOR: FOR '(' SF ';' E ';' • EF ')' CMD

    ID         shift, and go to state 1
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13

    $default  reduce using rule 15 (EF)

    EF          go to state 129
    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 84
    F           go to state 27


State 128

   39 CMD_IF: IF '(' E ')' CMD ELSE CMD •

    $default  reduce using rule 39 (CMD_IF)


State 129

   13 CMD_FOR: FOR '(' SF ';' E ';' EF • ')' CMD

    ')'  shift, and go to state 130


State 130

   13 CMD_FOR: FOR '(' SF ';' E ';' EF ')' • CMD

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    LET        shift, and go to state 3
    CONST      shift, and go to state 4
    VAR        shift, and go to state 5
    PRINT      shift, and go to state 6
    FOR        shift, and go to state 7
    CDOUBLE    shift, and go to state 8
    CSTRING    shift, and go to state 9
    CINT       shift, and go to state 10
    MAIS_MAIS  shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14

    CMD         go to state 131
    CMD_FOR     go to state 18
    CMD_LET     go to state 19
    CMD_VAR     go to state 20
    CMD_CONST   go to state 21
    CMD_IF      go to state 22
    LVALUE      go to state 23
    LVALUEPROP  go to state 24
    LIST        go to state 25
    E           go to state 26
    F           go to state 27


State 131

   13 CMD_FOR: FOR '(' SF ';' E ';' EF ')' CMD •

    $default  reduce using rule 13 (CMD_FOR)
