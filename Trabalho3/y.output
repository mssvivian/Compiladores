Terminals unused in grammar

    WHILE
    AND
    OR
    ME_IG
    MA_IG
    DIF
    IGUAL
    MAIS_IGUAL


State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs
    2  | ε

    3 CMDs: CMDs CMD
    4     | CMD

    5 CMD: CMD_LET ';'
    6    | CMD_VAR ';'
    7    | CMD_CONST ';'
    8    | CMD_IF
    9    | PRINT E ';'
   10    | CMD_FOR
   11    | E ';'
   12    | '{' CMDs '}'

   13 CMD_FOR: FOR '(' SF ';' E ';' EF ')' CMD

   14 EF: E
   15   | ε

   16 SF: CMD_LET
   17   | CMD_VAR
   18   | CMD_CONST
   19   | EF

   20 CMD_LET: LET LET_VARs

   21 LET_VARs: LET_VAR ',' LET_VARs
   22         | LET_VAR

   23 LET_VAR: ID
   24        | ID '=' E

   25 CMD_VAR: VAR VAR_VARs

   26 VAR_VARs: VAR_VAR ',' VAR_VARs
   27         | VAR_VAR

   28 VAR_VAR: ID
   29        | ID '=' E

   30 CMD_CONST: CONST CONST_VARs

   31 CONST_VARs: CONST_VAR ',' CONST_VARs
   32           | CONST_VAR

   33 CONST_VAR: ID '=' E

   34 CMD_IF: IF '(' E ')' CMD
   35       | IF '(' E ')' CMD ELSE CMD

   36 LVALUE: ID

   37 LVALUEPROP: E '[' E ']'
   38           | E '.' ID

   39 E: LVALUE '=' '{' '}'
   40  | LVALUE '=' E
   41  | LVALUEPROP '=' E
   42  | E '<' E
   43  | E '>' E
   44  | E '+' E
   45  | E '-' E
   46  | E '*' E
   47  | E '/' E
   48  | E '%' E
   49  | F

   50 F: CDOUBLE
   51  | CINT
   52  | CSTRING
   53  | LVALUE
   54  | LVALUEPROP
   55  | '(' E ')'
   56  | '(' '{' '}' ')'
   57  | LVALUE MAIS_MAIS


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 48
    '(' (40) 13 34 35 55 56
    ')' (41) 13 34 35 55 56
    '*' (42) 46
    '+' (43) 44
    ',' (44) 21 26 31
    '-' (45) 45
    '.' (46) 38
    '/' (47) 47
    ';' (59) 5 6 7 9 11 13
    '<' (60) 42
    '=' (61) 24 29 33 39 40 41
    '>' (62) 43
    '[' (91) 37
    ']' (93) 37
    '{' (123) 12 39 56
    '}' (125) 12 39 56
    error (256)
    ID (258) 23 24 28 29 33 36 38
    IF (259) 34 35
    ELSE (260) 35
    LET (261) 20
    CONST (262) 30
    VAR (263) 25
    PRINT (264) 9
    FOR (265) 13
    WHILE (266)
    CDOUBLE (267) 50
    CSTRING (268) 52
    CINT (269) 51
    AND (270)
    OR (271)
    ME_IG (272)
    MA_IG (273)
    DIF (274)
    IGUAL (275)
    MAIS_IGUAL (276)
    MAIS_MAIS (277) 57


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    S (41)
        on left: 1 2
        on right: 0
    CMDs (42)
        on left: 3 4
        on right: 1 3 12
    CMD (43)
        on left: 5 6 7 8 9 10 11 12
        on right: 3 4 13 34 35
    CMD_FOR (44)
        on left: 13
        on right: 10
    EF (45)
        on left: 14 15
        on right: 13 19
    SF (46)
        on left: 16 17 18 19
        on right: 13
    CMD_LET (47)
        on left: 20
        on right: 5 16
    LET_VARs (48)
        on left: 21 22
        on right: 20 21
    LET_VAR (49)
        on left: 23 24
        on right: 21 22
    CMD_VAR (50)
        on left: 25
        on right: 6 17
    VAR_VARs (51)
        on left: 26 27
        on right: 25 26
    VAR_VAR (52)
        on left: 28 29
        on right: 26 27
    CMD_CONST (53)
        on left: 30
        on right: 7 18
    CONST_VARs (54)
        on left: 31 32
        on right: 30 31
    CONST_VAR (55)
        on left: 33
        on right: 31 32
    CMD_IF (56)
        on left: 34 35
        on right: 8
    LVALUE (57)
        on left: 36
        on right: 39 40 53 57
    LVALUEPROP (58)
        on left: 37 38
        on right: 41 54
    E (59)
        on left: 39 40 41 42 43 44 45 46 47 48 49
        on right: 9 11 13 14 24 29 33 34 35 37 38 40 41 42 43 44 45 46 47 48 55
    F (60)
        on left: 50 51 52 53 54 55 56 57
        on right: 49


State 0

    0 $accept: • S $end

    ID       shift, and go to state 1
    IF       shift, and go to state 2
    LET      shift, and go to state 3
    CONST    shift, and go to state 4
    VAR      shift, and go to state 5
    PRINT    shift, and go to state 6
    FOR      shift, and go to state 7
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11
    '{'      shift, and go to state 12

    $default  reduce using rule 2 (S)

    S           go to state 13
    CMDs        go to state 14
    CMD         go to state 15
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_VAR     go to state 18
    CMD_CONST   go to state 19
    CMD_IF      go to state 20
    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 23
    F           go to state 24


State 1

   36 LVALUE: ID •

    $default  reduce using rule 36 (LVALUE)


State 2

   34 CMD_IF: IF • '(' E ')' CMD
   35       | IF • '(' E ')' CMD ELSE CMD

    '('  shift, and go to state 25


State 3

   20 CMD_LET: LET • LET_VARs

    ID  shift, and go to state 26

    LET_VARs  go to state 27
    LET_VAR   go to state 28


State 4

   30 CMD_CONST: CONST • CONST_VARs

    ID  shift, and go to state 29

    CONST_VARs  go to state 30
    CONST_VAR   go to state 31


State 5

   25 CMD_VAR: VAR • VAR_VARs

    ID  shift, and go to state 32

    VAR_VARs  go to state 33
    VAR_VAR   go to state 34


State 6

    9 CMD: PRINT • E ';'

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 35
    F           go to state 24


State 7

   13 CMD_FOR: FOR • '(' SF ';' E ';' EF ')' CMD

    '('  shift, and go to state 36


State 8

   50 F: CDOUBLE •

    $default  reduce using rule 50 (F)


State 9

   52 F: CSTRING •

    $default  reduce using rule 52 (F)


State 10

   51 F: CINT •

    $default  reduce using rule 51 (F)


State 11

   55 F: '(' • E ')'
   56  | '(' • '{' '}' ')'

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11
    '{'      shift, and go to state 37

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 38
    F           go to state 24


State 12

   12 CMD: '{' • CMDs '}'

    ID       shift, and go to state 1
    IF       shift, and go to state 2
    LET      shift, and go to state 3
    CONST    shift, and go to state 4
    VAR      shift, and go to state 5
    PRINT    shift, and go to state 6
    FOR      shift, and go to state 7
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11
    '{'      shift, and go to state 12

    CMDs        go to state 39
    CMD         go to state 15
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_VAR     go to state 18
    CMD_CONST   go to state 19
    CMD_IF      go to state 20
    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 23
    F           go to state 24


State 13

    0 $accept: S • $end

    $end  shift, and go to state 40


State 14

    1 S: CMDs •
    3 CMDs: CMDs • CMD

    ID       shift, and go to state 1
    IF       shift, and go to state 2
    LET      shift, and go to state 3
    CONST    shift, and go to state 4
    VAR      shift, and go to state 5
    PRINT    shift, and go to state 6
    FOR      shift, and go to state 7
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11
    '{'      shift, and go to state 12

    $default  reduce using rule 1 (S)

    CMD         go to state 41
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_VAR     go to state 18
    CMD_CONST   go to state 19
    CMD_IF      go to state 20
    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 23
    F           go to state 24


State 15

    4 CMDs: CMD •

    $default  reduce using rule 4 (CMDs)


State 16

   10 CMD: CMD_FOR •

    $default  reduce using rule 10 (CMD)


State 17

    5 CMD: CMD_LET • ';'

    ';'  shift, and go to state 42


State 18

    6 CMD: CMD_VAR • ';'

    ';'  shift, and go to state 43


State 19

    7 CMD: CMD_CONST • ';'

    ';'  shift, and go to state 44


State 20

    8 CMD: CMD_IF •

    $default  reduce using rule 8 (CMD)


State 21

   39 E: LVALUE • '=' '{' '}'
   40  | LVALUE • '=' E
   53 F: LVALUE •
   57  | LVALUE • MAIS_MAIS

    MAIS_MAIS  shift, and go to state 45
    '='        shift, and go to state 46

    $default  reduce using rule 53 (F)


State 22

   41 E: LVALUEPROP • '=' E
   54 F: LVALUEPROP •

    '='  shift, and go to state 47

    $default  reduce using rule 54 (F)


State 23

   11 CMD: E • ';'
   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56
    ';'  shift, and go to state 57


State 24

   49 E: F •

    $default  reduce using rule 49 (E)


State 25

   34 CMD_IF: IF '(' • E ')' CMD
   35       | IF '(' • E ')' CMD ELSE CMD

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 58
    F           go to state 24


State 26

   23 LET_VAR: ID •
   24        | ID • '=' E

    '='  shift, and go to state 59

    $default  reduce using rule 23 (LET_VAR)


State 27

   20 CMD_LET: LET LET_VARs •

    $default  reduce using rule 20 (CMD_LET)


State 28

   21 LET_VARs: LET_VAR • ',' LET_VARs
   22         | LET_VAR •

    ','  shift, and go to state 60

    $default  reduce using rule 22 (LET_VARs)


State 29

   33 CONST_VAR: ID • '=' E

    '='  shift, and go to state 61


State 30

   30 CMD_CONST: CONST CONST_VARs •

    $default  reduce using rule 30 (CMD_CONST)


State 31

   31 CONST_VARs: CONST_VAR • ',' CONST_VARs
   32           | CONST_VAR •

    ','  shift, and go to state 62

    $default  reduce using rule 32 (CONST_VARs)


State 32

   28 VAR_VAR: ID •
   29        | ID • '=' E

    '='  shift, and go to state 63

    $default  reduce using rule 28 (VAR_VAR)


State 33

   25 CMD_VAR: VAR VAR_VARs •

    $default  reduce using rule 25 (CMD_VAR)


State 34

   26 VAR_VARs: VAR_VAR • ',' VAR_VARs
   27         | VAR_VAR •

    ','  shift, and go to state 64

    $default  reduce using rule 27 (VAR_VARs)


State 35

    9 CMD: PRINT E • ';'
   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56
    ';'  shift, and go to state 65


State 36

   13 CMD_FOR: FOR '(' • SF ';' E ';' EF ')' CMD

    ID       shift, and go to state 1
    LET      shift, and go to state 3
    CONST    shift, and go to state 4
    VAR      shift, and go to state 5
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    $default  reduce using rule 15 (EF)

    EF          go to state 66
    SF          go to state 67
    CMD_LET     go to state 68
    CMD_VAR     go to state 69
    CMD_CONST   go to state 70
    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 71
    F           go to state 24


State 37

   56 F: '(' '{' • '}' ')'

    '}'  shift, and go to state 72


State 38

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E
   55 F: '(' E • ')'

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56
    ')'  shift, and go to state 73


State 39

    3 CMDs: CMDs • CMD
   12 CMD: '{' CMDs • '}'

    ID       shift, and go to state 1
    IF       shift, and go to state 2
    LET      shift, and go to state 3
    CONST    shift, and go to state 4
    VAR      shift, and go to state 5
    PRINT    shift, and go to state 6
    FOR      shift, and go to state 7
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11
    '{'      shift, and go to state 12
    '}'      shift, and go to state 74

    CMD         go to state 41
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_VAR     go to state 18
    CMD_CONST   go to state 19
    CMD_IF      go to state 20
    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 23
    F           go to state 24


State 40

    0 $accept: S $end •

    $default  accept


State 41

    3 CMDs: CMDs CMD •

    $default  reduce using rule 3 (CMDs)


State 42

    5 CMD: CMD_LET ';' •

    $default  reduce using rule 5 (CMD)


State 43

    6 CMD: CMD_VAR ';' •

    $default  reduce using rule 6 (CMD)


State 44

    7 CMD: CMD_CONST ';' •

    $default  reduce using rule 7 (CMD)


State 45

   57 F: LVALUE MAIS_MAIS •

    $default  reduce using rule 57 (F)


State 46

   39 E: LVALUE '=' • '{' '}'
   40  | LVALUE '=' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11
    '{'      shift, and go to state 75

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 76
    F           go to state 24


State 47

   41 E: LVALUEPROP '=' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 77
    F           go to state 24


State 48

   42 E: E '<' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 78
    F           go to state 24


State 49

   43 E: E '>' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 79
    F           go to state 24


State 50

   44 E: E '+' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 80
    F           go to state 24


State 51

   45 E: E '-' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 81
    F           go to state 24


State 52

   46 E: E '*' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 82
    F           go to state 24


State 53

   47 E: E '/' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 83
    F           go to state 24


State 54

   48 E: E '%' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 84
    F           go to state 24


State 55

   37 LVALUEPROP: E '[' • E ']'

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 85
    F           go to state 24


State 56

   38 LVALUEPROP: E '.' • ID

    ID  shift, and go to state 86


State 57

   11 CMD: E ';' •

    $default  reduce using rule 11 (CMD)


State 58

   34 CMD_IF: IF '(' E • ')' CMD
   35       | IF '(' E • ')' CMD ELSE CMD
   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56
    ')'  shift, and go to state 87


State 59

   24 LET_VAR: ID '=' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 88
    F           go to state 24


State 60

   21 LET_VARs: LET_VAR ',' • LET_VARs

    ID  shift, and go to state 26

    LET_VARs  go to state 89
    LET_VAR   go to state 28


State 61

   33 CONST_VAR: ID '=' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 90
    F           go to state 24


State 62

   31 CONST_VARs: CONST_VAR ',' • CONST_VARs

    ID  shift, and go to state 29

    CONST_VARs  go to state 91
    CONST_VAR   go to state 31


State 63

   29 VAR_VAR: ID '=' • E

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 92
    F           go to state 24


State 64

   26 VAR_VARs: VAR_VAR ',' • VAR_VARs

    ID  shift, and go to state 32

    VAR_VARs  go to state 93
    VAR_VAR   go to state 34


State 65

    9 CMD: PRINT E ';' •

    $default  reduce using rule 9 (CMD)


State 66

   19 SF: EF •

    $default  reduce using rule 19 (SF)


State 67

   13 CMD_FOR: FOR '(' SF • ';' E ';' EF ')' CMD

    ';'  shift, and go to state 94


State 68

   16 SF: CMD_LET •

    $default  reduce using rule 16 (SF)


State 69

   17 SF: CMD_VAR •

    $default  reduce using rule 17 (SF)


State 70

   18 SF: CMD_CONST •

    $default  reduce using rule 18 (SF)


State 71

   14 EF: E •
   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 14 (EF)


State 72

   56 F: '(' '{' '}' • ')'

    ')'  shift, and go to state 95


State 73

   55 F: '(' E ')' •

    $default  reduce using rule 55 (F)


State 74

   12 CMD: '{' CMDs '}' •

    $default  reduce using rule 12 (CMD)


State 75

   39 E: LVALUE '=' '{' • '}'

    '}'  shift, and go to state 96


State 76

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   40 E: LVALUE '=' E •
   42  | E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 40 (E)


State 77

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   41 E: LVALUEPROP '=' E •
   42  | E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 41 (E)


State 78

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   42  | E '<' E •
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 42 (E)


State 79

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   43  | E '>' E •
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 43 (E)


State 80

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   44  | E '+' E •
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 44 (E)


State 81

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   45  | E '-' E •
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 45 (E)


State 82

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   46  | E '*' E •
   47  | E • '/' E
   48  | E • '%' E

    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 46 (E)


State 83

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   47  | E '/' E •
   48  | E • '%' E

    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 47 (E)


State 84

   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E
   48  | E '%' E •

    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 48 (E)


State 85

   37 LVALUEPROP: E • '[' E ']'
   37           | E '[' E • ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56
    ']'  shift, and go to state 97


State 86

   38 LVALUEPROP: E '.' ID •

    $default  reduce using rule 38 (LVALUEPROP)


State 87

   34 CMD_IF: IF '(' E ')' • CMD
   35       | IF '(' E ')' • CMD ELSE CMD

    ID       shift, and go to state 1
    IF       shift, and go to state 2
    LET      shift, and go to state 3
    CONST    shift, and go to state 4
    VAR      shift, and go to state 5
    PRINT    shift, and go to state 6
    FOR      shift, and go to state 7
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11
    '{'      shift, and go to state 12

    CMD         go to state 98
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_VAR     go to state 18
    CMD_CONST   go to state 19
    CMD_IF      go to state 20
    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 23
    F           go to state 24


State 88

   24 LET_VAR: ID '=' E •
   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 24 (LET_VAR)


State 89

   21 LET_VARs: LET_VAR ',' LET_VARs •

    $default  reduce using rule 21 (LET_VARs)


State 90

   33 CONST_VAR: ID '=' E •
   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 33 (CONST_VAR)


State 91

   31 CONST_VARs: CONST_VAR ',' CONST_VARs •

    $default  reduce using rule 31 (CONST_VARs)


State 92

   29 VAR_VAR: ID '=' E •
   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56

    $default  reduce using rule 29 (VAR_VAR)


State 93

   26 VAR_VARs: VAR_VAR ',' VAR_VARs •

    $default  reduce using rule 26 (VAR_VARs)


State 94

   13 CMD_FOR: FOR '(' SF ';' • E ';' EF ')' CMD

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 99
    F           go to state 24


State 95

   56 F: '(' '{' '}' ')' •

    $default  reduce using rule 56 (F)


State 96

   39 E: LVALUE '=' '{' '}' •

    $default  reduce using rule 39 (E)


State 97

   37 LVALUEPROP: E '[' E ']' •

    $default  reduce using rule 37 (LVALUEPROP)


State 98

   34 CMD_IF: IF '(' E ')' CMD •
   35       | IF '(' E ')' CMD • ELSE CMD

    ELSE  shift, and go to state 100

    ELSE      [reduce using rule 34 (CMD_IF)]
    $default  reduce using rule 34 (CMD_IF)


State 99

   13 CMD_FOR: FOR '(' SF ';' E • ';' EF ')' CMD
   37 LVALUEPROP: E • '[' E ']'
   38           | E • '.' ID
   42 E: E • '<' E
   43  | E • '>' E
   44  | E • '+' E
   45  | E • '-' E
   46  | E • '*' E
   47  | E • '/' E
   48  | E • '%' E

    '<'  shift, and go to state 48
    '>'  shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '%'  shift, and go to state 54
    '['  shift, and go to state 55
    '.'  shift, and go to state 56
    ';'  shift, and go to state 101


State 100

   35 CMD_IF: IF '(' E ')' CMD ELSE • CMD

    ID       shift, and go to state 1
    IF       shift, and go to state 2
    LET      shift, and go to state 3
    CONST    shift, and go to state 4
    VAR      shift, and go to state 5
    PRINT    shift, and go to state 6
    FOR      shift, and go to state 7
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11
    '{'      shift, and go to state 12

    CMD         go to state 102
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_VAR     go to state 18
    CMD_CONST   go to state 19
    CMD_IF      go to state 20
    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 23
    F           go to state 24


State 101

   13 CMD_FOR: FOR '(' SF ';' E ';' • EF ')' CMD

    ID       shift, and go to state 1
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11

    $default  reduce using rule 15 (EF)

    EF          go to state 103
    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 71
    F           go to state 24


State 102

   35 CMD_IF: IF '(' E ')' CMD ELSE CMD •

    $default  reduce using rule 35 (CMD_IF)


State 103

   13 CMD_FOR: FOR '(' SF ';' E ';' EF • ')' CMD

    ')'  shift, and go to state 104


State 104

   13 CMD_FOR: FOR '(' SF ';' E ';' EF ')' • CMD

    ID       shift, and go to state 1
    IF       shift, and go to state 2
    LET      shift, and go to state 3
    CONST    shift, and go to state 4
    VAR      shift, and go to state 5
    PRINT    shift, and go to state 6
    FOR      shift, and go to state 7
    CDOUBLE  shift, and go to state 8
    CSTRING  shift, and go to state 9
    CINT     shift, and go to state 10
    '('      shift, and go to state 11
    '{'      shift, and go to state 12

    CMD         go to state 105
    CMD_FOR     go to state 16
    CMD_LET     go to state 17
    CMD_VAR     go to state 18
    CMD_CONST   go to state 19
    CMD_IF      go to state 20
    LVALUE      go to state 21
    LVALUEPROP  go to state 22
    E           go to state 23
    F           go to state 24


State 105

   13 CMD_FOR: FOR '(' SF ';' E ';' EF ')' CMD •

    $default  reduce using rule 13 (CMD_FOR)
